{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\campaign-analytics\\\\src\\\\components\\\\CampaignDashboard\\\\CampaignComparison.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport Papa from 'papaparse';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignComparison = () => {\n  _s();\n  const [campaignData, setCampaignData] = useState([]);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'ROAS',\n    direction: 'desc'\n  });\n  const [bestPerformers, setBestPerformers] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // 獲取文件列表\n        const filesResponse = await fetch('http://localhost:5000/api/files');\n        if (!filesResponse.ok) {\n          throw new Error(`HTTP error! status: ${filesResponse.status}`);\n        }\n        const files = await filesResponse.json();\n\n        // 讀取所有 CSV 文件\n        const allData = await Promise.all(files.map(async file => {\n          const response = await fetch(`http://localhost:5000/api/data/${file}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch ${file}`);\n          }\n          const text = await response.text();\n          return Papa.parse(text, {\n            header: true,\n            dynamicTyping: true,\n            skipEmptyLines: true\n          }).data;\n        }));\n\n        // 合併所有數據\n        const combinedData = allData.flat();\n\n        // 處理數據\n        const campaignStats = _(combinedData).groupBy('Campaign Name').map((campaign, name) => {\n          const totalImpressions = _.sumBy(campaign, 'Impressions');\n          const totalClicks = _.sumBy(campaign, 'Clicks');\n          const totalOrders = _.sumBy(campaign, '7 Day Total Orders (#)');\n          const totalSpend = _.sumBy(campaign, row => parseFloat(row['Spend'].replace('$', '')) || 0);\n          const totalSales = _.sumBy(campaign, row => parseFloat(row['7 Day Total Sales '].replace('$', '')) || 0);\n          return {\n            name,\n            impressions: totalImpressions,\n            clicks: totalClicks,\n            orders: totalOrders,\n            spend: totalSpend,\n            sales: totalSales,\n            CTR: totalImpressions ? (totalClicks / totalImpressions * 100).toFixed(2) : 0,\n            CPC: totalClicks ? (totalSpend / totalClicks).toFixed(2) : 0,\n            ACOS: totalSales ? (totalSpend / totalSales * 100).toFixed(2) : 0,\n            ROAS: totalSpend ? (totalSales / totalSpend).toFixed(2) : 0,\n            conversionRate: totalClicks ? (totalOrders / totalClicks * 100).toFixed(2) : 0\n          };\n        }).value();\n\n        // 計算最佳表現者\n        const best = {\n          highestROAS: _.maxBy(campaignStats, 'ROAS'),\n          lowestACOS: _.minBy(campaignStats.filter(c => parseFloat(c.ACOS) > 0), 'ACOS'),\n          highestCTR: _.maxBy(campaignStats, c => parseFloat(c.CTR)),\n          highestConversion: _.maxBy(campaignStats, c => parseFloat(c.conversionRate))\n        };\n        setBestPerformers(best);\n        setCampaignData(campaignStats);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error details:\", err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // ... 其餘代碼與你的原始版本相同 ...\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 p-4\",\n    children: [bestPerformers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignComparison, \"UnptkDrNc7PJ9Sl1XCL/Va2Weaw=\");\n_c = CampaignComparison;\nexport default CampaignComparison;\nvar _c;\n$RefreshReg$(_c, \"CampaignComparison\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Papa","_","jsxDEV","_jsxDEV","CampaignComparison","_s","campaignData","setCampaignData","sortConfig","setSortConfig","key","direction","bestPerformers","setBestPerformers","loading","setLoading","error","setError","fetchData","filesResponse","fetch","ok","Error","status","files","json","allData","Promise","all","map","file","response","text","parse","header","dynamicTyping","skipEmptyLines","data","combinedData","flat","campaignStats","groupBy","campaign","name","totalImpressions","sumBy","totalClicks","totalOrders","totalSpend","row","parseFloat","replace","totalSales","impressions","clicks","orders","spend","sales","CTR","toFixed","CPC","ACOS","ROAS","conversionRate","value","best","highestROAS","maxBy","lowestACOS","minBy","filter","c","highestCTR","highestConversion","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/python-training/eyeglad/campaign-analytics/src/components/CampaignDashboard/CampaignComparison.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport Papa from 'papaparse';\r\nimport _ from 'lodash';\r\n\r\nconst CampaignComparison = () => {\r\n  const [campaignData, setCampaignData] = useState([]);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'ROAS', direction: 'desc' });\r\n  const [bestPerformers, setBestPerformers] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // 獲取文件列表\r\n        const filesResponse = await fetch('http://localhost:5000/api/files');\r\n        if (!filesResponse.ok) {\r\n          throw new Error(`HTTP error! status: ${filesResponse.status}`);\r\n        }\r\n        const files = await filesResponse.json();\r\n\r\n        // 讀取所有 CSV 文件\r\n        const allData = await Promise.all(\r\n          files.map(async (file) => {\r\n            const response = await fetch(`http://localhost:5000/api/data/${file}`);\r\n            if (!response.ok) {\r\n              throw new Error(`Failed to fetch ${file}`);\r\n            }\r\n            const text = await response.text();\r\n            return Papa.parse(text, {\r\n              header: true,\r\n              dynamicTyping: true,\r\n              skipEmptyLines: true\r\n            }).data;\r\n          })\r\n        );\r\n\r\n        // 合併所有數據\r\n        const combinedData = allData.flat();\r\n        \r\n        // 處理數據\r\n        const campaignStats = _(combinedData)\r\n          .groupBy('Campaign Name')\r\n          .map((campaign, name) => {\r\n            const totalImpressions = _.sumBy(campaign, 'Impressions');\r\n            const totalClicks = _.sumBy(campaign, 'Clicks');\r\n            const totalOrders = _.sumBy(campaign, '7 Day Total Orders (#)');\r\n            const totalSpend = _.sumBy(campaign, row => parseFloat(row['Spend'].replace('$', '')) || 0);\r\n            const totalSales = _.sumBy(campaign, row => parseFloat(row['7 Day Total Sales '].replace('$', '')) || 0);\r\n\r\n            return {\r\n              name,\r\n              impressions: totalImpressions,\r\n              clicks: totalClicks,\r\n              orders: totalOrders,\r\n              spend: totalSpend,\r\n              sales: totalSales,\r\n              CTR: totalImpressions ? (totalClicks / totalImpressions * 100).toFixed(2) : 0,\r\n              CPC: totalClicks ? (totalSpend / totalClicks).toFixed(2) : 0,\r\n              ACOS: totalSales ? (totalSpend / totalSales * 100).toFixed(2) : 0,\r\n              ROAS: totalSpend ? (totalSales / totalSpend).toFixed(2) : 0,\r\n              conversionRate: totalClicks ? (totalOrders / totalClicks * 100).toFixed(2) : 0\r\n            };\r\n          })\r\n          .value();\r\n\r\n        // 計算最佳表現者\r\n        const best = {\r\n          highestROAS: _.maxBy(campaignStats, 'ROAS'),\r\n          lowestACOS: _.minBy(campaignStats.filter(c => parseFloat(c.ACOS) > 0), 'ACOS'),\r\n          highestCTR: _.maxBy(campaignStats, c => parseFloat(c.CTR)),\r\n          highestConversion: _.maxBy(campaignStats, c => parseFloat(c.conversionRate))\r\n        };\r\n\r\n        setBestPerformers(best);\r\n        setCampaignData(campaignStats);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error details:\", err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // ... 其餘代碼與你的原始版本相同 ...\r\n  \r\n  if (loading) return <div>Loading data...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-4\">\r\n      {/* 最佳表現概覽卡片 */}\r\n      {bestPerformers && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          {/* ... 你原始版本的四個卡片 ... */}\r\n        </div>\r\n      )}\r\n\r\n      {/* 詳細比較表格 */}\r\n      <Card>\r\n        {/* ... 你原始版本的表格內容 ... */}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampaignComparison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}