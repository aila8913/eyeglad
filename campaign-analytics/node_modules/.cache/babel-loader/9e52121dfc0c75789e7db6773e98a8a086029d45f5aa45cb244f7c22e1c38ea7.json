{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\campaign-analytics\\\\src\\\\components\\\\CampaignDashboard\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport _ from 'lodash';\n// 引入數據處理邏輯\nimport { processCampaignData } from '../../utils/dataTransforms';\nimport { fetchCampaignData } from '../../utils/api';\n\n// 導入子組件\nimport BestPerformersCard from './components/BestPerformersCard';\nimport CampaignTable from './components/CampaignTable';\nimport TrendCharts from './components/TrendCharts';\nimport ControlPanel from './components/ControlPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignComparison = () => {\n  _s();\n  const [campaignData, setCampaignData] = useState([]);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'ROAS',\n    direction: 'desc'\n  });\n  const [bestPerformers, setBestPerformers] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timeGranularity, setTimeGranularity] = useState('day');\n  const [processedData, setProcessedData] = useState([]);\n  const [compareMode, setCompareMode] = useState('combined');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const filesResponse = await fetch('http://localhost:5000/api/files');\n        if (!filesResponse.ok) {\n          throw new Error(`Failed to fetch files list: ${filesResponse.status}`);\n        }\n        let files = await filesResponse.json();\n        if (!Array.isArray(files) || files.length === 0) {\n          throw new Error('No files available');\n        }\n        const dataPromises = files.map(file => fetch(`http://localhost:5000/api/data/${file}`).then(response => {\n          if (!response.ok) throw new Error(`Failed to fetch ${file}`);\n          return response.text();\n        }).then(text => Papa.parse(text, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true\n        }).data).catch(error => {\n          console.error(`Error processing ${file}:`, error);\n          return [];\n        }));\n\n        // 在 fetchData 函數中確保設置 trends 資料\n        const allData = await Promise.all(dataPromises);\n        const combinedData = allData.flat();\n        const {\n          stats,\n          best,\n          trends\n        } = processCampaignData(combinedData);\n        setCampaignData(stats);\n        setBestPerformers(best);\n        setProcessedData(trends || []); // 添加預設值\n      } catch (error) {\n        console.error('Fetch Error:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // 當時間粒度改變時重新處理趨勢資料\n  useEffect(() => {\n    if (campaignData.length > 0) {\n      // 可以在這裡添加時間粒度變更時的資料處理邏輯\n      // setProcessedData(newTrendData);\n    }\n  }, [timeGranularity, campaignData]);\n  const handleSort = key => {\n    setSortConfig(prev => ({\n      key,\n      direction: prev.key === key && prev.direction === 'desc' ? 'asc' : 'desc'\n    }));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-red-500\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 p-4\",\n    children: [bestPerformers && /*#__PURE__*/_jsxDEV(BestPerformersCard, {\n      bestPerformers: bestPerformers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      timeGranularity: timeGranularity,\n      setTimeGranularity: setTimeGranularity,\n      compareMode: compareMode,\n      setCompareMode: setCompareMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrendCharts, {\n      processedData: processedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CampaignTable, {\n      campaignData: campaignData,\n      handleSort: handleSort,\n      sortConfig: sortConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignComparison, \"DB2HNkEMUQc2s4xSQV3XRmrduII=\");\n_c = CampaignComparison;\nexport default CampaignComparison;\nvar _c;\n$RefreshReg$(_c, \"CampaignComparison\");","map":{"version":3,"names":["React","useState","useEffect","Papa","_","processCampaignData","fetchCampaignData","BestPerformersCard","CampaignTable","TrendCharts","ControlPanel","jsxDEV","_jsxDEV","CampaignComparison","_s","campaignData","setCampaignData","sortConfig","setSortConfig","key","direction","bestPerformers","setBestPerformers","loading","setLoading","error","setError","timeGranularity","setTimeGranularity","processedData","setProcessedData","compareMode","setCompareMode","fetchData","filesResponse","fetch","ok","Error","status","files","json","Array","isArray","length","dataPromises","map","file","then","response","text","parse","header","dynamicTyping","skipEmptyLines","data","catch","console","allData","Promise","all","combinedData","flat","stats","best","trends","message","handleSort","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/python-training/eyeglad/campaign-analytics/src/components/CampaignDashboard/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport _ from 'lodash';\r\n// 引入數據處理邏輯\r\nimport { processCampaignData } from '../../utils/dataTransforms';\r\nimport { fetchCampaignData } from '../../utils/api';  \r\n\r\n// 導入子組件\r\nimport BestPerformersCard from './components/BestPerformersCard';\r\nimport CampaignTable from './components/CampaignTable';\r\nimport TrendCharts from './components/TrendCharts';\r\nimport ControlPanel from './components/ControlPanel';\r\n\r\nconst CampaignComparison = () => {\r\n  const [campaignData, setCampaignData] = useState([]);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'ROAS', direction: 'desc' });\r\n  const [bestPerformers, setBestPerformers] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeGranularity, setTimeGranularity] = useState('day');\r\n  const [processedData, setProcessedData] = useState([]);\r\n  const [compareMode, setCompareMode] = useState('combined');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const filesResponse = await fetch('http://localhost:5000/api/files');\r\n        if (!filesResponse.ok) {\r\n          throw new Error(`Failed to fetch files list: ${filesResponse.status}`);\r\n        }\r\n    \r\n        let files = await filesResponse.json();\r\n        if (!Array.isArray(files) || files.length === 0) {\r\n          throw new Error('No files available');\r\n        }\r\n    \r\n        const dataPromises = files.map(file => \r\n          fetch(`http://localhost:5000/api/data/${file}`)\r\n            .then(response => {\r\n              if (!response.ok) throw new Error(`Failed to fetch ${file}`);\r\n              return response.text();\r\n            })\r\n            .then(text => Papa.parse(text, {\r\n              header: true,\r\n              dynamicTyping: true,\r\n              skipEmptyLines: true\r\n            }).data)\r\n            .catch(error => {\r\n              console.error(`Error processing ${file}:`, error);\r\n              return [];\r\n            })\r\n        );\r\n    \r\n        // 在 fetchData 函數中確保設置 trends 資料\r\n        const allData = await Promise.all(dataPromises);\r\n        const combinedData = allData.flat();\r\n        const { stats, best, trends } = processCampaignData(combinedData);\r\n\r\n        setCampaignData(stats);\r\n        setBestPerformers(best);\r\n        setProcessedData(trends || []); // 添加預設值\r\n      } catch (error) {\r\n        console.error('Fetch Error:', error);\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // 當時間粒度改變時重新處理趨勢資料\r\n  useEffect(() => {\r\n    if (campaignData.length > 0) {\r\n      // 可以在這裡添加時間粒度變更時的資料處理邏輯\r\n      // setProcessedData(newTrendData);\r\n    }\r\n  }, [timeGranularity, campaignData]);\r\n\r\n  const handleSort = (key) => {\r\n    setSortConfig(prev => ({\r\n      key,\r\n      direction: prev.key === key && prev.direction === 'desc' ? 'asc' : 'desc'\r\n    }));\r\n  };\r\n\r\n  if (loading) return <div className=\"p-4\">Loading data...</div>;\r\n  if (error) return <div className=\"p-4 text-red-500\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-4\">\r\n      {bestPerformers && (\r\n        <BestPerformersCard bestPerformers={bestPerformers} />\r\n      )}\r\n\r\n      <ControlPanel\r\n        timeGranularity={timeGranularity}\r\n        setTimeGranularity={setTimeGranularity}\r\n        compareMode={compareMode}\r\n        setCompareMode={setCompareMode}\r\n      />\r\n      \r\n      <TrendCharts processedData={processedData} />\r\n      \r\n      <CampaignTable \r\n        campaignData={campaignData}\r\n        handleSort={handleSort}\r\n        sortConfig={sortConfig}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampaignComparison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}