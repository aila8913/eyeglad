{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\eyeglad-dashboard\\\\src\\\\components\\\\DataTable.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  columns,\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    overflowX: \"auto\",\n    maxHeight: \"400px\"\n  },\n  children: /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: col\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.length > 0 ? data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row[col]\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: columns.length,\n          className: \"text-center\",\n          children: \"\\u7121\\u6578\\u64DA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = DataTable;\nDataTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","DataTable","columns","data","style","overflowX","maxHeight","children","className","map","col","fileName","_jsxFileName","lineNumber","columnNumber","length","row","index","colSpan","_c","propTypes","arrayOf","string","isRequired","object","$RefreshReg$"],"sources":["C:/python-training/eyeglad/eyeglad-dashboard/src/components/DataTable.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DataTable = ({ columns, data }) => (\r\n  <div style={{ overflowX: \"auto\", maxHeight: \"400px\" }}>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          {columns.map((col) => (\r\n            <th key={col}>{col}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.length > 0 ? (\r\n          data.map((row, index) => (\r\n            <tr key={index}>\r\n              {columns.map((col) => (\r\n                <td key={col}>{row[col]}</td>\r\n              ))}\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={columns.length} className=\"text-center\">\r\n              無數據\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nDataTable.propTypes = {\r\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,kBAClCH,OAAA;EAAKI,KAAK,EAAE;IAAEC,SAAS,EAAE,MAAM;IAAEC,SAAS,EAAE;EAAQ,CAAE;EAAAC,QAAA,eACpDP,OAAA;IAAOQ,SAAS,EAAC,OAAO;IAAAD,QAAA,gBACtBP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,EACGL,OAAO,CAACO,GAAG,CAAEC,GAAG,iBACfV,OAAA;UAAAO,QAAA,EAAeG;QAAG,GAATA,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRd,OAAA;MAAAO,QAAA,EACGJ,IAAI,CAACY,MAAM,GAAG,CAAC,GACdZ,IAAI,CAACM,GAAG,CAAC,CAACO,GAAG,EAAEC,KAAK,kBAClBjB,OAAA;QAAAO,QAAA,EACGL,OAAO,CAACO,GAAG,CAAEC,GAAG,iBACfV,OAAA;UAAAO,QAAA,EAAeS,GAAG,CAACN,GAAG;QAAC,GAAdA,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAC7B;MAAC,GAHKG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL,CAAC,gBAEFd,OAAA;QAAAO,QAAA,eACEP,OAAA;UAAIkB,OAAO,EAAEhB,OAAO,CAACa,MAAO;UAACP,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAErD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACN;AAACK,EAAA,GA7BIlB,SAAS;AA+BfA,SAAS,CAACmB,SAAS,GAAG;EACpBlB,OAAO,EAAEJ,SAAS,CAACuB,OAAO,CAACvB,SAAS,CAACwB,MAAM,CAAC,CAACC,UAAU;EACvDpB,IAAI,EAAEL,SAAS,CAACuB,OAAO,CAACvB,SAAS,CAAC0B,MAAM,CAAC,CAACD;AAC5C,CAAC;AAED,eAAetB,SAAS;AAAC,IAAAkB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}