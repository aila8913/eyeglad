{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\eyeglad-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTables, fetchTableData } from \"./services/api\";\nimport Dropdown from \"./components/Dropdown\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport DataTable from \"./components/DataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [xAxis, setXAxis] = useState(\"\");\n  const [yAxis, setYAxis] = useState(\"\");\n  useEffect(() => {\n    fetchTables().then(response => {\n      setTables(response.data);\n      setSelectedTable(response.data[0]);\n      console.log(\"Fetched tables:\", response.data);\n    }).catch(error => console.error(\"Error fetching tables:\", error));\n  }, []);\n  useEffect(() => {\n    if (selectedTable) {\n      console.log(`Fetching data for table: ${selectedTable}`);\n      fetchTableData(selectedTable).then(responseData => {\n        if (responseData) {\n          console.log(\"Table data response:\", responseData);\n\n          // 確認 responseData 的結構\n          console.log(\"Response data structure:\", JSON.stringify(responseData, null, 2));\n          console.log(\"Columns: \", responseData.columns);\n          console.log(\"Data: \", responseData.data);\n\n          // 檢查 responseData.columns 和 responseData.data 是否為數組\n          if (Array.isArray(responseData.columns) && Array.isArray(responseData.data)) {\n            setColumns(responseData.columns);\n            setData(responseData.data);\n            console.log(\"Columns set:\", responseData.columns);\n            console.log(\"Data set:\", responseData.data);\n          } else {\n            console.error(\"Invalid data structure\");\n          }\n        } else {\n          console.error(\"No data returned from API\");\n        }\n      }).catch(error => console.error(\"Error fetching table data:\", error));\n    }\n  }, [selectedTable]);\n  useEffect(() => {\n    if (xAxis && yAxis && data.length > 0) {\n      const chartData = {\n        labels: data.map(row => row[xAxis]),\n        datasets: [{\n          label: yAxis,\n          data: data.map(row => row[yAxis]),\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\"\n        }]\n      };\n      setChartData(chartData);\n    }\n  }, [xAxis, yAxis, data]);\n  if (tables.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"EYEGLAD AmazonADs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"table-select\",\n      label: \"\\u9078\\u64C7\\u8868\\u683C\",\n      options: tables.map(table => ({\n        label: table,\n        value: table\n      })),\n      value: selectedTable,\n      onChange: setSelectedTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"x-axis-select\",\n      label: \"\\u9078\\u64C7X\\u8EF8\",\n      options: columns.length > 0 ? columns.map(col => ({\n        label: col,\n        value: col\n      })) : [{\n        label: \"Loading...\",\n        value: \"\"\n      }],\n      value: xAxis,\n      onChange: setXAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"y-axis-select\",\n      label: \"\\u9078\\u64C7Y\\u8EF8\",\n      options: columns.length > 0 ? columns.map(col => ({\n        label: col,\n        value: col\n      })) : [{\n        label: \"Loading...\",\n        value: \"\"\n      }],\n      value: yAxis,\n      onChange: setYAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(ChartComponent, {\n      data: chartData,\n      options: {\n        responsive: true\n      },\n      type: \"bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: \"\\u6578\\u64DA\\u8868\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), columns.length > 0 && data.length > 0 ? /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading table data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"90XCC/lyFNowiM/v6PVyBolQPIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTables","fetchTableData","Dropdown","ChartComponent","DataTable","jsxDEV","_jsxDEV","App","_s","tables","setTables","selectedTable","setSelectedTable","columns","setColumns","data","setData","chartData","setChartData","xAxis","setXAxis","yAxis","setYAxis","then","response","console","log","catch","error","responseData","JSON","stringify","Array","isArray","length","labels","map","row","datasets","label","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","options","table","value","onChange","col","responsive","type","_c","$RefreshReg$"],"sources":["C:/python-training/eyeglad/eyeglad-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTables, fetchTableData } from \"./services/api\";\r\nimport Dropdown from \"./components/Dropdown\";\r\nimport ChartComponent from \"./components/ChartComponent\";\r\nimport DataTable from \"./components/DataTable\";\r\n\r\nconst App = () => {\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(\"\");\r\n  const [columns, setColumns] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [xAxis, setXAxis] = useState(\"\");\r\n  const [yAxis, setYAxis] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchTables()\r\n      .then((response) => {\r\n        setTables(response.data);\r\n        setSelectedTable(response.data[0]);\r\n        console.log(\"Fetched tables:\", response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching tables:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      console.log(`Fetching data for table: ${selectedTable}`);\r\n      fetchTableData(selectedTable)\r\n        .then((responseData) => {\r\n          if (responseData) {\r\n            console.log(\"Table data response:\", responseData);\r\n\r\n            // 確認 responseData 的結構\r\n            console.log(\r\n              \"Response data structure:\",\r\n              JSON.stringify(responseData, null, 2)\r\n            );\r\n            console.log(\"Columns: \", responseData.columns);\r\n            console.log(\"Data: \", responseData.data);\r\n\r\n            // 檢查 responseData.columns 和 responseData.data 是否為數組\r\n            if (\r\n              Array.isArray(responseData.columns) &&\r\n              Array.isArray(responseData.data)\r\n            ) {\r\n              setColumns(responseData.columns);\r\n              setData(responseData.data);\r\n              console.log(\"Columns set:\", responseData.columns);\r\n              console.log(\"Data set:\", responseData.data);\r\n            } else {\r\n              console.error(\"Invalid data structure\");\r\n            }\r\n          } else {\r\n            console.error(\"No data returned from API\");\r\n          }\r\n        })\r\n        .catch((error) => console.error(\"Error fetching table data:\", error));\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  useEffect(() => {\r\n    if (xAxis && yAxis && data.length > 0) {\r\n      const chartData = {\r\n        labels: data.map((row) => row[xAxis]),\r\n        datasets: [\r\n          {\r\n            label: yAxis,\r\n            data: data.map((row) => row[yAxis]),\r\n            backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n          },\r\n        ],\r\n      };\r\n      setChartData(chartData);\r\n    }\r\n  }, [xAxis, yAxis, data]);\r\n\r\n  if (tables.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"mb-4\">EYEGLAD AmazonADs</h1>\r\n      <Dropdown\r\n        id=\"table-select\"\r\n        label=\"選擇表格\"\r\n        options={tables.map((table) => ({ label: table, value: table }))}\r\n        value={selectedTable}\r\n        onChange={setSelectedTable}\r\n      />\r\n      <Dropdown\r\n        id=\"x-axis-select\"\r\n        label=\"選擇X軸\"\r\n        options={\r\n          columns.length > 0\r\n            ? columns.map((col) => ({ label: col, value: col }))\r\n            : [{ label: \"Loading...\", value: \"\" }]\r\n        }\r\n        value={xAxis}\r\n        onChange={setXAxis}\r\n      />\r\n      <Dropdown\r\n        id=\"y-axis-select\"\r\n        label=\"選擇Y軸\"\r\n        options={\r\n          columns.length > 0\r\n            ? columns.map((col) => ({ label: col, value: col }))\r\n            : [{ label: \"Loading...\", value: \"\" }]\r\n        }\r\n        value={yAxis}\r\n        onChange={setYAxis}\r\n      />\r\n      {data.length > 0 ? (\r\n        <ChartComponent\r\n          data={chartData}\r\n          options={{ responsive: true }}\r\n          type=\"bar\"\r\n        />\r\n      ) : (\r\n        <div>Loading chart data...</div>\r\n      )}\r\n      {/* 添加loading狀態 */}\r\n      <h2 className=\"mt-4\">數據表</h2>\r\n      {columns.length > 0 && data.length > 0 ? (\r\n        <DataTable columns={columns} data={data} />\r\n      ) : (\r\n        <div>Loading table data...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,cAAc,QAAQ,gBAAgB;AAC5D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdC,WAAW,CAAC,CAAC,CACVuB,IAAI,CAAEC,QAAQ,IAAK;MAClBd,SAAS,CAACc,QAAQ,CAACT,IAAI,CAAC;MACxBH,gBAAgB,CAACY,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;MAClCU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAACT,IAAI,CAAC;IAC/C,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACd,IAAIY,aAAa,EAAE;MACjBc,OAAO,CAACC,GAAG,CAAC,4BAA4Bf,aAAa,EAAE,CAAC;MACxDV,cAAc,CAACU,aAAa,CAAC,CAC1BY,IAAI,CAAEM,YAAY,IAAK;QACtB,IAAIA,YAAY,EAAE;UAChBJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,YAAY,CAAC;;UAEjD;UACAJ,OAAO,CAACC,GAAG,CACT,0BAA0B,EAC1BI,IAAI,CAACC,SAAS,CAACF,YAAY,EAAE,IAAI,EAAE,CAAC,CACtC,CAAC;UACDJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEG,YAAY,CAAChB,OAAO,CAAC;UAC9CY,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,YAAY,CAACd,IAAI,CAAC;;UAExC;UACA,IACEiB,KAAK,CAACC,OAAO,CAACJ,YAAY,CAAChB,OAAO,CAAC,IACnCmB,KAAK,CAACC,OAAO,CAACJ,YAAY,CAACd,IAAI,CAAC,EAChC;YACAD,UAAU,CAACe,YAAY,CAAChB,OAAO,CAAC;YAChCG,OAAO,CAACa,YAAY,CAACd,IAAI,CAAC;YAC1BU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,YAAY,CAAChB,OAAO,CAAC;YACjDY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEG,YAAY,CAACd,IAAI,CAAC;UAC7C,CAAC,MAAM;YACLU,OAAO,CAACG,KAAK,CAAC,wBAAwB,CAAC;UACzC;QACF,CAAC,MAAM;UACLH,OAAO,CAACG,KAAK,CAAC,2BAA2B,CAAC;QAC5C;MACF,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,CAACjB,aAAa,CAAC,CAAC;EAEnBZ,SAAS,CAAC,MAAM;IACd,IAAIoB,KAAK,IAAIE,KAAK,IAAIN,IAAI,CAACmB,MAAM,GAAG,CAAC,EAAE;MACrC,MAAMjB,SAAS,GAAG;QAChBkB,MAAM,EAAEpB,IAAI,CAACqB,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAAClB,KAAK,CAAC,CAAC;QACrCmB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAElB,KAAK;UACZN,IAAI,EAAEA,IAAI,CAACqB,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAAChB,KAAK,CAAC,CAAC;UACnCmB,eAAe,EAAE;QACnB,CAAC;MAEL,CAAC;MACDtB,YAAY,CAACD,SAAS,CAAC;IACzB;EACF,CAAC,EAAE,CAACE,KAAK,EAAEE,KAAK,EAAEN,IAAI,CAAC,CAAC;EAExB,IAAIN,MAAM,CAACyB,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAO5B,OAAA;MAAAmC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBnC,OAAA;MAAIwC,SAAS,EAAC,MAAM;MAAAL,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CvC,OAAA,CAACJ,QAAQ;MACP6C,EAAE,EAAC,cAAc;MACjBR,KAAK,EAAC,0BAAM;MACZS,OAAO,EAAEvC,MAAM,CAAC2B,GAAG,CAAEa,KAAK,KAAM;QAAEV,KAAK,EAAEU,KAAK;QAAEC,KAAK,EAAED;MAAM,CAAC,CAAC,CAAE;MACjEC,KAAK,EAAEvC,aAAc;MACrBwC,QAAQ,EAAEvC;IAAiB;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFvC,OAAA,CAACJ,QAAQ;MACP6C,EAAE,EAAC,eAAe;MAClBR,KAAK,EAAC,qBAAM;MACZS,OAAO,EACLnC,OAAO,CAACqB,MAAM,GAAG,CAAC,GACdrB,OAAO,CAACuB,GAAG,CAAEgB,GAAG,KAAM;QAAEb,KAAK,EAAEa,GAAG;QAAEF,KAAK,EAAEE;MAAI,CAAC,CAAC,CAAC,GAClD,CAAC;QAAEb,KAAK,EAAE,YAAY;QAAEW,KAAK,EAAE;MAAG,CAAC,CACxC;MACDA,KAAK,EAAE/B,KAAM;MACbgC,QAAQ,EAAE/B;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFvC,OAAA,CAACJ,QAAQ;MACP6C,EAAE,EAAC,eAAe;MAClBR,KAAK,EAAC,qBAAM;MACZS,OAAO,EACLnC,OAAO,CAACqB,MAAM,GAAG,CAAC,GACdrB,OAAO,CAACuB,GAAG,CAAEgB,GAAG,KAAM;QAAEb,KAAK,EAAEa,GAAG;QAAEF,KAAK,EAAEE;MAAI,CAAC,CAAC,CAAC,GAClD,CAAC;QAAEb,KAAK,EAAE,YAAY;QAAEW,KAAK,EAAE;MAAG,CAAC,CACxC;MACDA,KAAK,EAAE7B,KAAM;MACb8B,QAAQ,EAAE7B;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACD9B,IAAI,CAACmB,MAAM,GAAG,CAAC,gBACd5B,OAAA,CAACH,cAAc;MACbY,IAAI,EAAEE,SAAU;MAChB+B,OAAO,EAAE;QAAEK,UAAU,EAAE;MAAK,CAAE;MAC9BC,IAAI,EAAC;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,gBAEFvC,OAAA;MAAAmC,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAChC,eAEDvC,OAAA;MAAIwC,SAAS,EAAC,MAAM;MAAAL,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BhC,OAAO,CAACqB,MAAM,GAAG,CAAC,IAAInB,IAAI,CAACmB,MAAM,GAAG,CAAC,gBACpC5B,OAAA,CAACF,SAAS;MAACS,OAAO,EAAEA,OAAQ;MAACE,IAAI,EAAEA;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3CvC,OAAA;MAAAmC,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CA7HID,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AA+HT,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}