{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\eyeglad-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTables, fetchTableData } from \"./services/api\";\nimport Dropdown from \"./components/Dropdown\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport DataTable from \"./components/DataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [xAxis, setXAxis] = useState(\"\");\n  const [yAxis, setYAxis] = useState(\"\");\n  useEffect(() => {\n    fetchTables().then(response => {\n      setTables(response.data);\n      setSelectedTable(response.data[0]);\n    }).catch(error => console.error(\"Error fetching tables:\", error));\n  }, []);\n  useEffect(() => {\n    if (selectedTable) {\n      console.log(`Fetching data for table: ${selectedTable}`);\n      fetchTableData(selectedTable).then(response => {\n        console.log(\"Table data response:\", response.data);\n        setColumns(response.data.columns || []);\n        setData(response.data.data || []);\n      }).catch(error => console.error(\"Error fetching table data:\", error));\n    }\n  }, [selectedTable]);\n  useEffect(() => {\n    if (xAxis && yAxis && data.length > 0) {\n      const chartData = {\n        labels: data.map(row => row[xAxis]),\n        datasets: [{\n          label: yAxis,\n          data: data.map(row => row[yAxis]),\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\"\n        }]\n      };\n      setChartData(chartData);\n    }\n  }, [xAxis, yAxis, data]);\n  if (tables.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"EYEGLAD AmazonADs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"\\u9078\\u64C7\\u8868\\u683C\",\n      options: tables.map(table => ({\n        label: table,\n        value: table\n      })),\n      value: selectedTable,\n      onChange: setSelectedTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"\\u9078\\u64C7X\\u8EF8\",\n      options: columns.map(col => ({\n        label: col,\n        value: col\n      })),\n      value: xAxis,\n      onChange: setXAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      label: \"\\u9078\\u64C7Y\\u8EF8\",\n      options: columns.map(col => ({\n        label: col,\n        value: col\n      })),\n      value: yAxis,\n      onChange: setYAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(ChartComponent, {\n      data: chartData,\n      options: {\n        responsive: true\n      },\n      type: \"bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: \"\\u6578\\u64DA\\u8868\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), columns.length > 0 && data.length > 0 ? /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading table data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"90XCC/lyFNowiM/v6PVyBolQPIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTables","fetchTableData","Dropdown","ChartComponent","DataTable","jsxDEV","_jsxDEV","App","_s","tables","setTables","selectedTable","setSelectedTable","columns","setColumns","data","setData","chartData","setChartData","xAxis","setXAxis","yAxis","setYAxis","then","response","catch","error","console","log","length","labels","map","row","datasets","label","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","table","value","onChange","col","responsive","type","_c","$RefreshReg$"],"sources":["C:/python-training/eyeglad/eyeglad-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTables, fetchTableData } from \"./services/api\";\r\nimport Dropdown from \"./components/Dropdown\";\r\nimport ChartComponent from \"./components/ChartComponent\";\r\nimport DataTable from \"./components/DataTable\";\r\n\r\nconst App = () => {\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(\"\");\r\n  const [columns, setColumns] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [xAxis, setXAxis] = useState(\"\");\r\n  const [yAxis, setYAxis] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchTables()\r\n      .then((response) => {\r\n        setTables(response.data);\r\n        setSelectedTable(response.data[0]);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching tables:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      console.log(`Fetching data for table: ${selectedTable}`);\r\n      fetchTableData(selectedTable)\r\n        .then((response) => {\r\n          console.log(\"Table data response:\", response.data);\r\n          setColumns(response.data.columns || []);\r\n          setData(response.data.data || []);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching table data:\", error));\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  useEffect(() => {\r\n    if (xAxis && yAxis && data.length > 0) {\r\n      const chartData = {\r\n        labels: data.map((row) => row[xAxis]),\r\n        datasets: [\r\n          {\r\n            label: yAxis,\r\n            data: data.map((row) => row[yAxis]),\r\n            backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n          },\r\n        ],\r\n      };\r\n      setChartData(chartData);\r\n    }\r\n  }, [xAxis, yAxis, data]);\r\n\r\n  if (tables.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"mb-4\">EYEGLAD AmazonADs</h1>\r\n      <Dropdown\r\n        label=\"選擇表格\"\r\n        options={tables.map((table) => ({ label: table, value: table }))}\r\n        value={selectedTable}\r\n        onChange={setSelectedTable}\r\n      />\r\n      <Dropdown\r\n        label=\"選擇X軸\"\r\n        options={columns.map((col) => ({ label: col, value: col }))}\r\n        value={xAxis}\r\n        onChange={setXAxis}\r\n      />\r\n      <Dropdown\r\n        label=\"選擇Y軸\"\r\n        options={columns.map((col) => ({ label: col, value: col }))}\r\n        value={yAxis}\r\n        onChange={setYAxis}\r\n      />\r\n      {data.length > 0 ? (\r\n        <ChartComponent\r\n          data={chartData}\r\n          options={{ responsive: true }}\r\n          type=\"bar\"\r\n        />\r\n      ) : null}\r\n      <h2 className=\"mt-4\">數據表</h2>\r\n      {columns.length > 0 && data.length > 0 ? (\r\n        <DataTable columns={columns} data={data} />\r\n      ) : (\r\n        <div>Loading table data...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}