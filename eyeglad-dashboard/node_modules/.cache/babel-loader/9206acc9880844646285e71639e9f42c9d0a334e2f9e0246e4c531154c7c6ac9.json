{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\eyeglad-dashboard\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  columns,\n  data\n}) => {\n  _s();\n  const defaultColumn = useMemo(() => ({\n    Filter: DefaultColumnFilter\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data,\n    defaultColumn\n  }, useFilters, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? \" 🔽\" : \" 🔼\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: column.canFilter ? column.render(\"Filter\") : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"D5rSuRI+/eYpMeJQDTw5XxJam/o=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nDataTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\n// Default UI for filtering\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `篩選... (${count})`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c2 = DefaultColumnFilter;\nexport default DataTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"DataTable\");\n$RefreshReg$(_c2, \"DefaultColumnFilter\");","map":{"version":3,"names":["React","useMemo","useTable","useFilters","useSortBy","PropTypes","jsxDEV","_jsxDEV","DataTable","columns","data","_s","defaultColumn","Filter","DefaultColumnFilter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","fileName","_jsxFileName","lineNumber","columnNumber","canFilter","row","getRowProps","cells","cell","getCellProps","_c","propTypes","arrayOf","object","isRequired","filterValue","preFilteredRows","count","length","value","onChange","e","target","undefined","placeholder","_c2","$RefreshReg$"],"sources":["C:/python-training/eyeglad/eyeglad-dashboard/src/components/DataTable.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useTable, useFilters, useSortBy } from \"react-table\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DataTable = ({ columns, data }) => {\r\n  const defaultColumn = useMemo(\r\n    () => ({\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"table\">\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                {column.render(\"Header\")}\r\n                <span>\r\n                  {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\r\n                </span>\r\n                <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => (\r\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\n// Default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`篩選... (${count})`}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}