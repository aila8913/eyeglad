{"ast":null,"code":"var _jsxFileName = \"C:\\\\python-training\\\\eyeglad\\\\eyeglad-dashboard\\\\src\\\\components\\\\EyegladAmazonADs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { fetchTables, fetchTableData } from \"../services/api\";\nimport Dropdown from \"./Dropdown\";\nimport DateRangeFilter from \"./DateRangeFilter\";\nimport FilterInput from \"./FilterInput\";\nimport ChartWrapper from \"./ChartWrapper\";\nimport DataTable from \"./DataTable\";\nimport \"../css/DataTable.css\"; // 導入 CSS 文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) => {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `篩選... (${count})`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = DefaultColumnFilter;\nconst EyegladAmazonADs = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [xAxis, setXAxis] = useState(\"Targeting\");\n  const [yAxis, setYAxis] = useState(\"TACoS\");\n  const [filterColumn, setFilterColumn] = useState(\"TACoS\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [filterValues, setFilterValues] = useState({});\n  const [pointSizeColumn, setPointSizeColumn] = useState(\"Spend\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  useEffect(() => {\n    fetchTables().then(response => {\n      const tableData = Array.isArray(response) ? response : [];\n      const adTables = tableData.filter(table => !table.includes(\"AmazonSales\"));\n      setTables(adTables);\n      if (adTables.length > 0) {\n        setSelectedTable(adTables[0]);\n      }\n    }).catch(error => console.error(\"Error fetching tables:\", error));\n  }, []);\n  useEffect(() => {\n    if (selectedTable) {\n      fetchTableData(selectedTable).then(responseData => {\n        const columnData = Array.isArray(responseData.columns) ? responseData.columns.map(col => ({\n          Header: col,\n          accessor: col\n        })) : [];\n        const tableData = Array.isArray(responseData.data) ? responseData.data : [];\n        setColumns(columnData);\n        setData(tableData);\n      }).catch(error => console.error(\"Error fetching table data:\", error));\n    }\n  }, [selectedTable]);\n  const handleFilterChange = (column, value) => {\n    setFilterValues(prev => ({\n      ...prev,\n      [column]: value\n    }));\n  };\n  useEffect(() => {\n    let filteredData = data;\n\n    // 應用日期篩選\n    if (startDate && endDate) {\n      filteredData = filteredData.filter(row => {\n        const date = new Date(row.Date);\n        return date >= new Date(startDate) && date <= new Date(endDate);\n      });\n    }\n\n    // 應用列篩選\n    Object.keys(filterValues).forEach(column => {\n      const filterValue = filterValues[column];\n      if (filterValue) {\n        filteredData = filteredData.filter(row => {\n          const value = row[column];\n          if (typeof value === \"string\") {\n            return value.includes(filterValue);\n          } else if (typeof value === \"number\") {\n            if (filterValue.startsWith(\">\")) {\n              const minValue = parseFloat(filterValue.slice(1));\n              return value > minValue;\n            } else if (filterValue.startsWith(\"<\")) {\n              const maxValue = parseFloat(filterValue.slice(1));\n              return value < maxValue;\n            } else if (filterValue.includes(\"-\")) {\n              const [min, max] = filterValue.split(\"-\").map(parseFloat);\n              return value > min && value < max;\n            }\n          }\n          return true;\n        });\n      }\n    });\n    const chartData = {\n      labels: filteredData.map(row => row[xAxis]),\n      datasets: [{\n        label: yAxis,\n        data: filteredData.map(row => ({\n          x: row[xAxis],\n          y: row[yAxis],\n          ...row\n        }))\n      }]\n    };\n    setChartData(chartData);\n    setData(filteredData); // 更新篩選後的數據\n  }, [data, xAxis, yAxis, startDate, endDate, filterValues]);\n  const columnsForTable = useMemo(() => columns.map(col => ({\n    Header: col.Header,\n    accessor: col.accessor,\n    Filter: DefaultColumnFilter,\n    filter: \"text\"\n  })), [columns]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Eyeglad Amazon ADs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"table-select\",\n      label: \"\\u9078\\u64C7\\u8868\\u683C\",\n      options: tables.map(table => ({\n        label: table,\n        value: table\n      })) || [],\n      value: selectedTable,\n      onChange: setSelectedTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"x-axis-select\",\n      label: \"\\u9078\\u64C7X\\u8EF8\",\n      options: columns.map(col => ({\n        label: col.Header,\n        value: col.accessor\n      })) || [],\n      value: xAxis,\n      onChange: setXAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"y-axis-select\",\n      label: \"\\u9078\\u64C7Y\\u8EF8\",\n      options: columns.map(col => ({\n        label: col.Header,\n        value: col.accessor\n      })) || [],\n      value: yAxis,\n      onChange: setYAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"filter-column-select\",\n      label: \"\\u7BE9\\u9078\\u5217\",\n      options: columns.map(col => ({\n        label: col.Header,\n        value: col.accessor\n      })) || [],\n      value: filterColumn,\n      onChange: setFilterColumn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterInput, {\n      filterValue: filterValue,\n      setFilterValue: setFilterValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"point-size-column-select\",\n      label: \"\\u9078\\u64C7\\u9EDE\\u5927\\u5C0F\\u5217\",\n      options: columns.map(col => ({\n        label: col.Header,\n        value: col.accessor\n      })) || [],\n      value: pointSizeColumn,\n      onChange: setPointSizeColumn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangeFilter, {\n      startDate: startDate,\n      setStartDate: setStartDate,\n      endDate: endDate,\n      setEndDate: setEndDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n      data: chartData,\n      type: \"line\",\n      xAxis: xAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columnsForTable,\n      data: data,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(EyegladAmazonADs, \"Gd6SyQ0Mo75wVFmzl/YerOvh1is=\");\n_c2 = EyegladAmazonADs;\nexport default EyegladAmazonADs;\nvar _c, _c2;\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"EyegladAmazonADs\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","fetchTables","fetchTableData","Dropdown","DateRangeFilter","FilterInput","ChartWrapper","DataTable","jsxDEV","_jsxDEV","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","EyegladAmazonADs","_s","tables","setTables","selectedTable","setSelectedTable","columns","setColumns","data","setData","chartData","setChartData","xAxis","setXAxis","yAxis","setYAxis","filterColumn","setFilterColumn","setFilterValue","filterValues","setFilterValues","pointSizeColumn","setPointSizeColumn","startDate","setStartDate","endDate","setEndDate","then","response","tableData","Array","isArray","adTables","filter","table","includes","catch","error","console","responseData","columnData","map","col","Header","accessor","handleFilterChange","prev","filteredData","row","date","Date","Object","keys","forEach","startsWith","minValue","parseFloat","slice","maxValue","min","max","split","labels","datasets","label","x","y","columnsForTable","Filter","children","id","options","type","onFilterChange","_c2","$RefreshReg$"],"sources":["C:/python-training/eyeglad/eyeglad-dashboard/src/components/EyegladAmazonADs.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { fetchTables, fetchTableData } from \"../services/api\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport DateRangeFilter from \"./DateRangeFilter\";\r\nimport FilterInput from \"./FilterInput\";\r\nimport ChartWrapper from \"./ChartWrapper\";\r\nimport DataTable from \"./DataTable\";\r\nimport \"../css/DataTable.css\"; // 導入 CSS 文件\r\n\r\nconst DefaultColumnFilter = ({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) => {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`篩選... (${count})`}\r\n    />\r\n  );\r\n};\r\n\r\nconst EyegladAmazonADs = () => {\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(\"\");\r\n  const [columns, setColumns] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [xAxis, setXAxis] = useState(\"Targeting\");\r\n  const [yAxis, setYAxis] = useState(\"TACoS\");\r\n  const [filterColumn, setFilterColumn] = useState(\"TACoS\");\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const [filterValues, setFilterValues] = useState({});\r\n  const [pointSizeColumn, setPointSizeColumn] = useState(\"Spend\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchTables()\r\n      .then((response) => {\r\n        const tableData = Array.isArray(response) ? response : [];\r\n        const adTables = tableData.filter(\r\n          (table) => !table.includes(\"AmazonSales\")\r\n        );\r\n        setTables(adTables);\r\n        if (adTables.length > 0) {\r\n          setSelectedTable(adTables[0]);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching tables:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      fetchTableData(selectedTable)\r\n        .then((responseData) => {\r\n          const columnData = Array.isArray(responseData.columns)\r\n            ? responseData.columns.map((col) => ({\r\n                Header: col,\r\n                accessor: col,\r\n              }))\r\n            : [];\r\n          const tableData = Array.isArray(responseData.data)\r\n            ? responseData.data\r\n            : [];\r\n          setColumns(columnData);\r\n          setData(tableData);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching table data:\", error));\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  const handleFilterChange = (column, value) => {\r\n    setFilterValues((prev) => ({ ...prev, [column]: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let filteredData = data;\r\n\r\n    // 應用日期篩選\r\n    if (startDate && endDate) {\r\n      filteredData = filteredData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        return date >= new Date(startDate) && date <= new Date(endDate);\r\n      });\r\n    }\r\n\r\n    // 應用列篩選\r\n    Object.keys(filterValues).forEach((column) => {\r\n      const filterValue = filterValues[column];\r\n      if (filterValue) {\r\n        filteredData = filteredData.filter((row) => {\r\n          const value = row[column];\r\n          if (typeof value === \"string\") {\r\n            return value.includes(filterValue);\r\n          } else if (typeof value === \"number\") {\r\n            if (filterValue.startsWith(\">\")) {\r\n              const minValue = parseFloat(filterValue.slice(1));\r\n              return value > minValue;\r\n            } else if (filterValue.startsWith(\"<\")) {\r\n              const maxValue = parseFloat(filterValue.slice(1));\r\n              return value < maxValue;\r\n            } else if (filterValue.includes(\"-\")) {\r\n              const [min, max] = filterValue.split(\"-\").map(parseFloat);\r\n              return value > min && value < max;\r\n            }\r\n          }\r\n          return true;\r\n        });\r\n      }\r\n    });\r\n\r\n    const chartData = {\r\n      labels: filteredData.map((row) => row[xAxis]),\r\n      datasets: [\r\n        {\r\n          label: yAxis,\r\n          data: filteredData.map((row) => ({\r\n            x: row[xAxis],\r\n            y: row[yAxis],\r\n            ...row,\r\n          })),\r\n        },\r\n      ],\r\n    };\r\n    setChartData(chartData);\r\n    setData(filteredData); // 更新篩選後的數據\r\n  }, [data, xAxis, yAxis, startDate, endDate, filterValues]);\r\n\r\n  const columnsForTable = useMemo(\r\n    () =>\r\n      columns.map((col) => ({\r\n        Header: col.Header,\r\n        accessor: col.accessor,\r\n        Filter: DefaultColumnFilter,\r\n        filter: \"text\",\r\n      })),\r\n    [columns]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Eyeglad Amazon ADs</h2>\r\n      <Dropdown\r\n        id=\"table-select\"\r\n        label=\"選擇表格\"\r\n        options={tables.map((table) => ({ label: table, value: table })) || []}\r\n        value={selectedTable}\r\n        onChange={setSelectedTable}\r\n      />\r\n      <Dropdown\r\n        id=\"x-axis-select\"\r\n        label=\"選擇X軸\"\r\n        options={\r\n          columns.map((col) => ({ label: col.Header, value: col.accessor })) ||\r\n          []\r\n        }\r\n        value={xAxis}\r\n        onChange={setXAxis}\r\n      />\r\n      <Dropdown\r\n        id=\"y-axis-select\"\r\n        label=\"選擇Y軸\"\r\n        options={\r\n          columns.map((col) => ({ label: col.Header, value: col.accessor })) ||\r\n          []\r\n        }\r\n        value={yAxis}\r\n        onChange={setYAxis}\r\n      />\r\n      <Dropdown\r\n        id=\"filter-column-select\"\r\n        label=\"篩選列\"\r\n        options={\r\n          columns.map((col) => ({ label: col.Header, value: col.accessor })) ||\r\n          []\r\n        }\r\n        value={filterColumn}\r\n        onChange={setFilterColumn}\r\n      />\r\n      <FilterInput filterValue={filterValue} setFilterValue={setFilterValue} />\r\n      <Dropdown\r\n        id=\"point-size-column-select\"\r\n        label=\"選擇點大小列\"\r\n        options={\r\n          columns.map((col) => ({ label: col.Header, value: col.accessor })) ||\r\n          []\r\n        }\r\n        value={pointSizeColumn}\r\n        onChange={setPointSizeColumn}\r\n      />\r\n      <DateRangeFilter\r\n        startDate={startDate}\r\n        setStartDate={setStartDate}\r\n        endDate={endDate}\r\n        setEndDate={setEndDate}\r\n      />\r\n      <ChartWrapper data={chartData} type=\"line\" xAxis={xAxis} />\r\n      <DataTable\r\n        columns={columnsForTable}\r\n        data={data}\r\n        onFilterChange={handleFilterChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EyegladAmazonADs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}